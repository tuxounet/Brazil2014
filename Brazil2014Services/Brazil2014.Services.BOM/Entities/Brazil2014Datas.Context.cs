//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace C2S.Brazil2014.Services.BOM.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BRAZIL2014Entities : DbContext
    {
        public BRAZIL2014Entities()
            : base("name=BRAZIL2014Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Group> Group { get; set; }
        public virtual DbSet<Match> Match { get; set; }
        public virtual DbSet<MatchType> MatchType { get; set; }
        public virtual DbSet<Stade> Stade { get; set; }
        public virtual DbSet<Team> Team { get; set; }
        public virtual DbSet<News> News { get; set; }
        public virtual DbSet<Videos> Videos { get; set; }
    
        [DbFunction("BRAZIL2014Entities", "TeamResultsGroup_Search")]
        public virtual IQueryable<TeamResultsGroup_Search_Result> TeamResultsGroup_Search(Nullable<System.DateTime> date, string groupKey, Nullable<bool> isIn)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var groupKeyParameter = groupKey != null ?
                new ObjectParameter("groupKey", groupKey) :
                new ObjectParameter("groupKey", typeof(string));
    
            var isInParameter = isIn.HasValue ?
                new ObjectParameter("isIn", isIn) :
                new ObjectParameter("isIn", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<TeamResultsGroup_Search_Result>("[BRAZIL2014Entities].[TeamResultsGroup_Search](@Date, @groupKey, @isIn)", dateParameter, groupKeyParameter, isInParameter);
        }
    
        public virtual ObjectResult<Get_MatchsGroup_Result> Get_MatchsGroup(string groupkey)
        {
            var groupkeyParameter = groupkey != null ?
                new ObjectParameter("Groupkey", groupkey) :
                new ObjectParameter("Groupkey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_MatchsGroup_Result>("Get_MatchsGroup", groupkeyParameter);
        }
    
        public virtual ObjectResult<Get_TeamResultGroup_Result> Get_TeamResultGroup(string groupKey)
        {
            var groupKeyParameter = groupKey != null ?
                new ObjectParameter("groupKey", groupKey) :
                new ObjectParameter("groupKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_TeamResultGroup_Result>("Get_TeamResultGroup", groupKeyParameter);
        }
    }
}
